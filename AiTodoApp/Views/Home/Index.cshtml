@{
    ViewData["Title"] = "Eisenhower Matrix";
}

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #e0e7ff 0%, #f8fafc 100%);
            min-height: 100vh;
            color: #22223b;
        }

        .matrix-title {
            font-weight: 700;
            letter-spacing: 1px;
            color: #2f3e63;
        }

        .eisenhower-section {
            padding: 1.5rem;
            border-radius: 16px;
            background: #fff;
            box-shadow: 0 8px 24px rgba(31, 41, 55, 0.08);
            min-height: 320px;
            margin-bottom: 1.5rem;
            border: 3px solid #e0e7ff;
            transition: box-shadow 0.2s, border 0.2s;
        }

            .eisenhower-section:hover {
                box-shadow: 0 12px 32px rgba(31, 41, 55, 0.14);
                border-color: #a5b4fc;
            }

            .eisenhower-section h2 {
                font-size: 1.25rem;
                font-weight: 600;
                margin-bottom: 1rem;
                color: #364fc7;
            }

        .add-task-form {
            background: #fff;
            padding: 2rem 1.5rem;
            margin-top: 2rem;
            border-radius: 18px;
            box-shadow: 0 6px 24px rgba(31, 41, 55, 0.08);
            border-left: 6px solid #a5b4fc;
        }

        .btn-primary {
            background: linear-gradient(90deg, #6366f1, #4f46e5);
            border: none;
            font-weight: 500;
        }

            .btn-primary:hover {
                background: linear-gradient(90deg, #4f46e5, #6366f1);
            }

        .task-item {
            transition: background 0.2s, text-decoration 0.2s;
            cursor: pointer;
            user-select: none;
        }

            .task-item.dragging {
                opacity: 0.5;
                background: #ede9fe !important;
            }

            .task-item:hover {
                background: #e7e9fc;
                text-decoration: line-through;
            }

        .section-label {
            padding: 0.2rem 0.7rem;
            border-radius: 12px;
            font-size: 0.9rem;
            font-weight: 500;
            margin-bottom: 0.6rem;
            display: inline-block;
        }

        .label-now {
            background: #fde047;
            color: #b45309;
        }

        .label-schedule {
            background: #a7f3d0;
            color: #065f46;
        }

        .label-delegate {
            background: #fca5a5;
            color: #991b1b;
        }

        .label-delete {
            background: #c7d2fe;
            color: #3730a3;
        }

        .highlight-drop {
            border: 3px dashed #6366f1 !important;
            background: #f3f0ff;
        }
        
    </style>
</head>
<body>
    <div class="container py-5">
        <h1 class="text-center mb-5 matrix-title">Eisenhower Matrix</h1>
        <div class="row g-4 mb-4">
            <div class="col-lg-6 col-12">
                <div class="eisenhower-section h-100">
                    <span class="section-label label-now">WAŻNE + PILNE</span>
                    <h2>Zrób to teraz</h2>
                    <ul class="list-group" id="do-now-tasks"
                        ondragover="event.preventDefault()"
                        ondrop="handleDrop(event, 'do-now')"
                        ondragenter="highlightDrop(event, true)"
                        ondragleave="highlightDrop(event, false)">
                    </ul>
                </div>
            </div>
            <div class="col-lg-6 col-12">
                <div class="eisenhower-section h-100">
                    <span class="section-label label-schedule">WAŻNE + NIEPILNE</span>
                    <h2>Zaplanuj</h2>
                    <ul class="list-group" id="schedule-tasks"
                        ondragover="event.preventDefault()"
                        ondrop="handleDrop(event, 'schedule')"
                        ondragenter="highlightDrop(event, true)"
                        ondragleave="highlightDrop(event, false)">
                    </ul>
                </div>
            </div>
            <div class="col-lg-6 col-12">
                <div class="eisenhower-section h-100">
                    <span class="section-label label-delegate">PILNE + NIEWAŻNE</span>
                    <h2>Deleguj</h2>
                    <ul class="list-group" id="delegate-tasks"
                        ondragover="event.preventDefault()"
                        ondrop="handleDrop(event, 'delegate')"
                        ondragenter="highlightDrop(event, true)"
                        ondragleave="highlightDrop(event, false)">
                    </ul>
                </div>
            </div>
            <div class="col-lg-6 col-12">
                <div class="eisenhower-section h-100">
                    <span class="section-label label-delete">NIEWAŻNE + NIEPILNE</span>
                    <h2>Usuń</h2>
                    <ul class="list-group" id="delete-tasks"
                        ondragover="event.preventDefault()"
                        ondrop="handleDrop(event, 'delete')"
                        ondragenter="highlightDrop(event, true)"
                        ondragleave="highlightDrop(event, false)">
                    </ul>
                </div>
            </div>
        </div>

        <div class="add-task-form mx-auto" style="max-width:480px;">
            <h2 class="text-center mb-3">Dodaj zadanie</h2>
            <form id="add-task-form">
                <div class="mb-3">
                    <input type="text" id="task-input" placeholder="Wpisz treść zadania..." class="form-control" autocomplete="off" required />
                </div>
                <div class="mb-3">
                    <select id="priority-select" class="form-select" required>
                        <option value="do-now">Zrób to teraz (ważne + pilne)</option>
                        <option value="schedule">Zaplanuj (ważne + niepilne)</option>
                        <option value="delegate">Deleguj (pilne + nieważne)</option>
                        <option value="delete">Usuń (nieważne + niepilne)</option>
                    </select>
                </div>
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">Dodaj</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // DRAG & DROP helpers
        let draggedItem = null;

        function highlightDrop(event, highlight) {
            event.preventDefault();
            const ul = event.currentTarget;
            if (highlight) {
                ul.classList.add('highlight-drop');
            } else {
                ul.classList.remove('highlight-drop');
            }
        }

        function handleDrop(event, targetListIdPrefix) {
            event.preventDefault();
            const targetList = document.getElementById(`${targetListIdPrefix}-tasks`);
            if (draggedItem && targetList && draggedItem !== targetList) {
                targetList.appendChild(draggedItem);
                draggedItem.classList.remove('dragging');
            }
            document.querySelectorAll('.highlight-drop').forEach(el => el.classList.remove('highlight-drop'));
            draggedItem = null;
        }

        function makeTaskDraggable(taskItem) {
            taskItem.setAttribute('draggable', 'true');
            taskItem.addEventListener('dragstart', function (e) {
                draggedItem = taskItem;
                setTimeout(() => taskItem.classList.add('dragging'), 0);
            });
            taskItem.addEventListener('dragend', function () {
                taskItem.classList.remove('dragging');
                draggedItem = null;
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            const taskInput = document.getElementById('task-input');
            const prioritySelect = document.getElementById('priority-select');
            const addTaskForm = document.getElementById('add-task-form');

            addTaskForm.addEventListener('submit', function (e) {
                e.preventDefault();
                const taskText = taskInput.value.trim();
                const priority = prioritySelect.value;

                if (taskText) {
                    const taskList = document.getElementById(`${priority}-tasks`);
                    const taskItem = document.createElement('li');
                    taskItem.className = 'list-group-item task-item d-flex align-items-center justify-content-between';

                    const span = document.createElement('span');
                    span.textContent = taskText;

                    const removeBtn = document.createElement('button');
                    removeBtn.className = 'btn btn-sm btn-outline-danger ms-2';
                    removeBtn.innerHTML = '&times;';
                    removeBtn.title = 'Usuń zadanie';

                    removeBtn.addEventListener('click', function () {
                        taskList.removeChild(taskItem);
                    });

                    taskItem.appendChild(span);
                    taskItem.appendChild(removeBtn);

                    makeTaskDraggable(taskItem);

                    taskList.appendChild(taskItem);
                    taskInput.value = '';
                }
            });
        });
    </script>
</body>
</html>